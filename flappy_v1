// include the library code:
#include <LiquidCrystal.h>

// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int jump;
int height;
int width;
int step = 0;
int pipeheight;
int timer = 0;
int score = 0;
bool alive = true;
bool buttonlast = false;

int l[16] = {0};
int p[16] = {0};
int lengths[7] = {1, 3, 7, 14, 28, 24, 16};
byte flappyt[8] = {0,4,10,12,0,0,0,0};
byte flappyb[8] = {0,0,0,0,0,0,0,0};
byte pipet[8];
byte pipeb[8];

void setup() {
  Serial.begin(9600);
  delay(1000);

  pinMode (6, INPUT_PULLUP);
  
  // initialize LCD and set up the number of columns and rows:
  lcd.begin(16, 2);

  // create a new character
  lcd.createChar(1, flappyt);
  // set the cursor to the top left
  lcd.setCursor(0, 0);
  //lcd.write(byte(0)); // when calling lcd.write() '0' must be cast as a byte
  lcd.write(byte(1));
  
  Serial.println("end");
}

void gameover(int score) {
  delay(400);
  //Blink display 3 times
  for(int i = 0; i < 3; i++) {
    lcd.noDisplay();
    delay(500);
    lcd.display();
    delay(500);
  }
  //Clear all
  lcd.clear();

  //Game Over
  lcd.setCursor(1, 0);
  lcd.print("Game Over");

  //Print score
  lcd.setCursor(1, 1);
  lcd.print("Score: ");
  lcd.print(score);
  alive = false;
  
}

void loop() {
  if (alive) {
    //JUMPING
    if (digitalRead(6) == 0) {
      if (!buttonlast) {
        jump = timer % 2 + 1;
        timer = timer - 10 * jump;
        score++;
        if (timer < 0) {
          timer = 0;
        }
        buttonlast = true;
      }
    } else {
      buttonlast = false;
    }

    //bird height
    height = (timer - (timer % 10)) / 10;

    //Craeting bird array
    for(int i = 0; i < 16; i++) {
      if(i <= height - 1) {
        l[i] = 0;
      } else if(i <= height) {
        l[i] = 4;
      }else if(i <= height + 1) {
        l[i] = 10;
      }else if(i <= height + 2) {
        l[i] = 12;
      }else {
        l[i] = 0;
      }
    }

    //Step count
    if (timer % 10 == 0) {
      step++;
      if(step > 6) {
        step = 0;
      }
    }

    //Create pipes
    pipeheight = 7;
    if(pipeheight > 7) {
      pipeheight = 7;
    }
    width = lengths[step];
    p[0] = width;
    p[15] = width;
    for(int i = 0; i < 14; i++) {
      if(pipeheight > i) {
        p[i + 1] = width;
      } else if (pipeheight + 7 < i) {
        p[i + 1] = width;
      }
    }

    //Creating bird specialChars
    for(int i = 0; i < 8; i++) {
      flappyt[i] = l[i];
      flappyb[i] = l[i + 8];
      pipet[i] = p[i];
      pipeb[i] = p[i + 8];
    }
    lcd.createChar(1, flappyt);
    lcd.createChar(2, flappyb);
    lcd.createChar(3, pipet);
    lcd.createChar(4, pipeb);
    
    //Tiping out (everithing)
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.write(byte(1));

    lcd.setCursor(0, 1);
    lcd.write(byte(2));

    lcd.setCursor(14, 0);
    lcd.write(byte(3));

    lcd.setCursor(14, 1);
    lcd.write(byte(4));

    //if hits floor
    if(height == 13) {
      gameover(score);
    }
    //timer 
    //13 rotations of 10 * 50ms = 13 rotations of 500ms (0.5 seconds)
    timer++;
    if(timer > 130) {
      timer = 130;
    }

    delay(50);
  } else if (digitalRead(6) == 0) {
    timer = 0;
    score = 0;
    alive = true;
    buttonlast = true;
  }
}
