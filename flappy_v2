// include the library code:
#include <LiquidCrystal.h>

// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to
const int rs = 8, en = 9, d4 = 3, d5 = 4, d6 = 5, d7 = 6;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int jump = 20;
int altitude;
bool buttonlast = false;
int bird[16] = {0};
byte flappyt[8] = {0,4,10,12,0,0,0,0};
byte flappyb[8] = {0,0,0,0,0,0,0,0};

int width;
int steps[3] = {6, 11, 0};
int lengths[15] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 7, 14, 28, 24, 16}; //rotation of pipe widths
int pipes[3][16] = {0}; //3 slots with 16 lines each
int heights[4] = {8, 8, 8, 8}; //0-8 (8 - empty)
byte pipet1[8];
byte pipeb1[8];
byte pipet2[8];
byte pipeb2[8];
byte pipet3[8];
byte pipeb3[8];

int byte_n;
int timer = 20;
int num_j; //limit 32767
int seed_last = 0;
bool alive = true;


void setup() {
  Serial.begin(9600);
  delay(1000);

  pinMode (2, INPUT_PULLUP);
  
  // initialize LCD and set up the number of columns and rows:
  lcd.begin(16, 2);

  
  Serial.println("end");
}

void gameover(int num_j) {
  delay(400);
  //Blink display 3 times
  for(int i = 0; i < 3; i++) {
    lcd.noDisplay();
    delay(500);
    lcd.display();
    delay(500);
  }
  //Clear all
  lcd.clear();

  //Game Over
  lcd.setCursor(1, 0);
  lcd.print("Game Over");

  //Print number of jumps
  lcd.setCursor(1, 1);
  lcd.print("num_j: ");
  lcd.print(num_j);
  alive = false;
  
}

void loop() {
  if (alive) {
    //JUMPING
    if (digitalRead(2) == 0) {
      if (!buttonlast) {
        num_j++;
        if (timer > 20) {
          timer = timer - jump;
        }
        buttonlast = true;
      }
    } else {
      buttonlast = false;
    }

    //bird altitude
    altitude = (timer - (timer % 10)) / 10;

    //Craeting bird array
    for(int i = 0; i < 16; i++) {
      if(i <= altitude - 1) {
        bird[i] = 0;
      } else if(i <= altitude) {
        bird[i] = 4;
      }else if(i <= altitude + 1) {
        bird[i] = 10;
      }else if(i <= altitude + 2) {
        bird[i] = 12;
      }else {
        bird[i] = 0;
      }
    }

    for(int i = 0; i < 3; i++) {
      if (heights[i] > 7) {
        for(int n = 0; n < 16; n++) {
          pipes[i][n] = 0;
        }
      } else {
        pipes[i][0] = lengths[steps[i]];
        pipes[i][15] = lengths[steps[i]];
        for(int n = 1; n < 15; n++) {
          if (heights[i] >= n) {
            pipes[i][n] = lengths[steps[i]];
          } else if (heights[i] + 7 < n) {
            pipes[i][n] = lengths[steps[i]];
          }
        }
      }
    }
    
    //Pipe step count
    if (timer % 10 == 0) {
      for(int i = 0; i < 3; i++) {
        steps[i]++;
        if (steps[i] > 15) {
          steps[i] = 0;
          heights[i] = heights[i + 1];
        }
      }
    }
    
    //rand height
    if (heights[2] == heights[3]) {
      if (seed_last != num_j) {
        seed_last = num_j;
        randomSeed(seed_last);
      }
      heights[3] = random(8);
    }

    //Creating specialChars 1. time
    for(int i = 0; i < 8; i++) {
      flappyt[i] = bird[i];
      flappyb[i] = bird[i + 8];
      pipet1[i] = pipes[0][i];
      pipeb1[i] = pipes[0][i + 8];
      pipet2[i] = pipes[1][i];
      pipeb2[i] = pipes[1][i + 8];
      pipet3[i] = pipes[2][i];
      pipeb3[i] = pipes[2][i + 8];
    }
    lcd.createChar(0, flappyt);
    lcd.createChar(1, flappyb);
    lcd.createChar(2, pipet1);
    lcd.createChar(3, pipeb1);
    lcd.createChar(4, pipet2);
    lcd.createChar(5, pipeb2);
    lcd.createChar(6, pipet3);
    lcd.createChar(7, pipeb3);
    
    //Tiping out 1. time
    lcd.clear();
    byte_n = 0;
    for(int i = 1; i < 5; i++) {
      for(int n = 0; n < 2; n++) {
        lcd.setCursor(i, n);
        lcd.write(byte(byte_n));
        byte_n++;
      }
    }

    //if hits floor
    if(altitude == 13) {
      gameover(num_j);
    }
    //timer 
    //13 rotations of 10 * 50ms = 13 rotations of 500ms (0.5 seconds)
    timer++;
    if(timer > 130) {
      timer = 130;
    }

    delay(20);
  } else if (digitalRead(2) == 0) {
    for(int i = 0; i < 4; i++) {
      heights[i] = 8;
    }
    
    timer = 0;
    alive = true;
    buttonlast = true;
  }
}
